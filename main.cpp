#include <iostream>

#include "core.h"
#include "engine.h"

int main() {
  Board board = Board({
      Piece(Color::black, PieceType::rook),
      Piece(Color::black, PieceType::knight),
      Piece(Color::black, PieceType::bishop),
      Piece(Color::black, PieceType::queen),
      Piece(Color::black, PieceType::king),
      Piece(Color::black, PieceType::bishop),
      Piece(Color::black, PieceType::knight),
      Piece(Color::black, PieceType::rook),
      Piece(Color::black, PieceType::pawn),
      Piece(Color::black, PieceType::pawn),
      Piece(Color::black, PieceType::pawn),
      Piece(Color::black, PieceType::pawn),
      Piece(Color::black, PieceType::pawn),
      Piece(Color::black, PieceType::pawn),
      Piece(Color::black, PieceType::pawn),
      Piece(Color::black, PieceType::pawn),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::none, PieceType::empty),
      Piece(Color::white, PieceType::pawn),
      Piece(Color::white, PieceType::pawn),
      Piece(Color::white, PieceType::pawn),
      Piece(Color::white, PieceType::pawn),
      Piece(Color::white, PieceType::pawn),
      Piece(Color::white, PieceType::pawn),
      Piece(Color::white, PieceType::pawn),
      Piece(Color::white, PieceType::pawn),
      Piece(Color::white, PieceType::rook),
      Piece(Color::white, PieceType::knight),
      Piece(Color::white, PieceType::bishop),
      Piece(Color::white, PieceType::queen),
      Piece(Color::white, PieceType::king),
      Piece(Color::white, PieceType::bishop),
      Piece(Color::white, PieceType::knight),
      Piece(Color::white, PieceType::rook),
  });

  std::cout << "hi" << std::endl;
  std::cout << NegaMax(-1000, 1000, 3, board);
  // DrawBoard(board.next->pieceList);
  return 0;
}